@page "/security/RolesporUsuario"
@using LoginShared
@inject UserRoleService UserRoleService
@inject RoleService RoleService
@inject UserService UserService
@using System.Net
@using LoginBlazor2.Security.Services
@using LoginShared.Security.DTOs
@inject NavigationManager NavigationManager

<div class="content__header content__boxed overlapping">
    <div class="content__wrap">
        <div class="d-md-flex align-items-end">
            <div class="me-auto">
                <!-- Breadcrumb -->
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item">
                            <a href="/">Home</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Roles por Usuario</li>
                    </ol>
                </nav>
                <!-- END : Breadcrumb -->
                <h1 class="page-title mb-0 mt-2">Roles por Usuario</h1>
            </div>
            <div class="d-flex justify-content-end gap-1">
                <button class="btn btn-sm btn-icon btn-hover btn-light shadow-none"
                        @onclick="() => NavigateToUserRoleEdit(0)">
                    <i class="pli-pen-5 fs-5 me-2"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="content__boxed">
    <div class="content__wrap">
        <div class="row mt-3">
            @if (roles == null)
            {
                <div class="col-12">
                    <p>Loading...</p>
                </div>
            }
            else
            {
                <div>
                    <h3>Asignar rol a un usuario</h3>
                    <div>
                        <label>
                            Usuario:
                            <select @bind="selectedUserId">
                                @foreach (var user in users)
                                {
                                    <option value="@user.Id">@user.Name</option>
                                }
                            </select>
                        </label>
                    </div>
                    <div>
                        <label>
                            Rol:
                            <select @bind="selectedRoleId">
                                @foreach (var role in roles)
                                {
                                    <option value="@role.Id">@role.Description</option>
                                }
                            </select>
                        </label>
                    </div>
                    <button type="button" @onclick="AssignRoleToUser">Asignar</button>
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <p>@errorMessage</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private int selectedUserId;
    private int selectedRoleId;

    private List<GetUserDto> users;
    private List<GetRoleDto> roles;

    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsers();
        roles = await RoleService.GetRoles();
    }

    private async Task AssignRoleToUser()
    {
        try
        {
            await UserRoleService.AddUserRoleAsync(selectedUserId, selectedRoleId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }

    private void NavigateToUserRoleEdit(int Id)
    {
        NavigationManager.NavigateTo("/Security/EditUserRole/" + Id);
    }

}
